/**
 * jQuery Lightbox Plugin - Simple plugin for image gallery with lightbox effect
 * Reference: https://github.com/lokesh/lightbox2 (Modified version)
 */
(function($) {
    $.fn.lightbox = function(options) {
        // Default settings
        const settings = $.extend({
            opacity: 0.8,
            fadeIn: 400,
            fadeOut: 300,
            overlayColor: '#000'
        }, options);
        
        // Create lightbox elements if they don't exist
        if ($('#lightbox').length === 0) {
            const lightbox = $('<div id="lightbox"></div>').hide();
            const overlay = $('<div id="lightbox-overlay"></div>').hide();
            const container = $('<div id="lightbox-container"></div>');
            const image = $('<img id="lightbox-image" />');
            const caption = $('<div id="lightbox-caption"></div>');
            const close = $('<div id="lightbox-close">&times;</div>');
            const next = $('<div id="lightbox-next">&rsaquo;</div>').hide();
            const prev = $('<div id="lightbox-prev">&lsaquo;</div>').hide();
            
            container.append(image, caption, close, next, prev);
            lightbox.append(container);
            $('body').append(overlay, lightbox);
        }
        
        // Get lightbox elements
        const $lightbox = $('#lightbox');
        const $overlay = $('#lightbox-overlay');
        const $image = $('#lightbox-image');
        const $caption = $('#lightbox-caption');
        const $close = $('#lightbox-close');
        const $next = $('#lightbox-next');
        const $prev = $('#lightbox-prev');
        
        // Store all gallery items
        const $items = this;
        let currentIndex = 0;
        
        // Handle click on gallery item
        this.each(function(index) {
            $(this).click(function(e) {
                e.preventDefault();
                
                // Get item index
                currentIndex = index;
                
                // Get image source and caption
                const src = $(this).attr('href');
                const caption = $(this).data('title') || '';
                
                // Set image and caption
                $image.attr('src', src);
                $caption.text(caption);
                
                // Show navigation if needed
                if ($items.length > 1) {
                    $next.show();
                    $prev.show();
                    
                    // Handle first and last items
                    if (currentIndex === 0) {
                        $prev.hide();
                    }
                    
                    if (currentIndex === $items.length - 1) {
                        $next.hide();
                    }
                }
                
                // Show lightbox and overlay
                $overlay.fadeIn(settings.fadeIn);
                $lightbox.fadeIn(settings.fadeIn);
            });
        });
        
        // Explicitly bind event handlers - FIX HERE
        
        // Close lightbox on click
        $close.off('click').on('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            $lightbox.fadeOut(settings.fadeOut);
            $overlay.fadeOut(settings.fadeOut);
        });
        
        // Close lightbox when clicking on overlay
        $overlay.off('click').on('click', function() {
            $lightbox.fadeOut(settings.fadeOut);
            $overlay.fadeOut(settings.fadeOut);
        });
        
        // Navigate to next image
        $next.off('click').on('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            if (currentIndex < $items.length - 1) {
                currentIndex++;
                const $nextItem = $($items[currentIndex]);
                
                // Update image and caption
                $image.attr('src', $nextItem.attr('href'));
                $caption.text($nextItem.data('title') || '');
                
                // Show/hide navigation buttons
                $prev.show();
                if (currentIndex === $items.length - 1) {
                    $next.hide();
                }
            }
        });
        
        // Navigate to previous image
        $prev.off('click').on('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            if (currentIndex > 0) {
                currentIndex--;
                const $prevItem = $($items[currentIndex]);
                
                // Update image and caption
                $image.attr('src', $prevItem.attr('href'));
                $caption.text($prevItem.data('title') || '');
                
                // Show/hide navigation buttons
                $next.show();
                if (currentIndex === 0) {
                    $prev.hide();
                }
            }
        });
        
        // Prevent event propagation from container to lightbox
        $lightbox.find('#lightbox-container').off('click').on('click', function(e) {
            e.stopPropagation();
        });
        
        // Allow clicking on lightbox to close it
        $lightbox.off('click').on('click', function() {
            $lightbox.fadeOut(settings.fadeOut);
            $overlay.fadeOut(settings.fadeOut);
        });
        
        return this;
    };
})(jQuery);